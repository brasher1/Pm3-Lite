// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "dtcellset.h"

// Dispatch interfaces referenced by this interface
#include "dtcell.h"


/////////////////////////////////////////////////////////////////////////////
// CDTCellSet properties

long CDTCellSet::GetSelectType()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CDTCellSet::SetSelectType(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

CString CDTCellSet::GetNullString()
{
	CString result;
	GetProperty(0x2, VT_BSTR, (void*)&result);
	return result;
}

void CDTCellSet::SetNullString(LPCTSTR propVal)
{
	SetProperty(0x2, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CDTCellSet operations

CDTCell CDTCellSet::GetItem(long Row, long Column)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		Row, Column);
	return CDTCell(pDispatch);
}

void CDTCellSet::SetItem(long Row, long Column, LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_DISPATCH;
	InvokeHelper(0x6, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, parms,
		 Row, Column, newValue);
}

void CDTCellSet::SelectBlock(long LeftCol, long TopRow, long RightCol, long BottomRow, BOOL bSelect)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 LeftCol, TopRow, RightCol, BottomRow, bSelect);
}

BOOL CDTCellSet::GetSelect(long* LeftCol, long* TopRow, long* RightCol, long* BottomRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		LeftCol, TopRow, RightCol, BottomRow);
	return result;
}

long CDTCellSet::GetCellAtPoint(float X, float Y, short* Pane, long* Row, long* Column)
{
	long result;
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_PI2 VTS_PI4 VTS_PI4;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		X, Y, Pane, Row, Column);
	return result;
}

CDTCell CDTCellSet::Get_Item(long Column, long Row)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		Column, Row);
	return CDTCell(pDispatch);
}

void CDTCellSet::Set_Item(long Column, long Row, LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_DISPATCH;
	InvokeHelper(0x0, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, parms,
		 Column, Row, newValue);
}
